name: Test, Build, Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  avoid_reduncy:
    runs-on: ubuntu-22.04
    steps:
      - name: Cancel Previous Redundant Builds
        uses: styfle/cancel-workflow-action@0.9.1

  grab_version:
    runs-on: ubuntu-22.04
    steps:
      - name: Grab version
        id: version
        run: echo "::set-output name=version::$(jq -r '.version' package.json)"

  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: lint
        run: npx eslint src --max-warnings 0

  sonar_scan:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Build ui package
        run: npm run build
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  test:
    needs: [lint, sonar_scan, build]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: test
        run: npm run test -- --coverage

  build_storybook:
    needs: [lint, sonar_scan, build]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: build storybook
        run: npm run build-storybook
      - uses: actions/upload-artifact@v2
        with:
          name: storybook-static
          path: storybook-static

  publish_NPM:
    needs: [test, build_storybook]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Publish package to NPM
        if: ${{ github.event_name == 'push'}}
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN}}

          # Single deploy job since we're just deploying
  deploy:
    needs: [test, build_storybook]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - uses: actions/download-artifact@v2
        with:
          name: storybook-static
          path: storybook-static
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload dist repository
          path: './storybook-static'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
